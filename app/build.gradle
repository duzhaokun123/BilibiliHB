import java.text.SimpleDateFormat

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.protobuf'
    id "kotlin-kapt"
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine "git", "rev-parse", "--short", "HEAD"
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def isHasChange = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine "git", "status", "--short"
        standardOutput = stdout
    }
    return !stdout.toString().trim().isEmpty()
}

def isRunningOnCI = { ->
    return System.getenv("CI") == "true"
}

android {
    def buildTime = System.currentTimeMillis()
    def baseVersionName = "0.1.4"

    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    defaultConfig {
        applicationId "com.duzhaokun123.bilibilihd"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 141
        versionName "$baseVersionName+${getGitHash()}${isRunningOnCI() ? "-ci" : ""}${isHasChange() ? "-changed" : ""}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField("boolean", "IS_GIT_VERSION", "true")
        buildConfigField("long", "BUILD_TIME", buildTime.toString())
        multiDexEnabled true
        resConfigs "en", "zh-rCN"
    }

    signingConfigs {
        def keystorePwd = null
        def pwd = null
        if (project.rootProject.file('local.properties').exists()) {
            Properties properties = new Properties()
            properties.load(project.rootProject.file('local.properties').newDataInputStream())
            keystorePwd = properties.getProperty("REL_KEY")
            pwd = properties.getProperty("REL_KEY")
        }
        release {
            storeFile file("../ReleaseKey.jks")
            storePassword keystorePwd != null ? keystorePwd : System.getenv("REL_KEY")
            keyAlias "key0"
            keyPassword pwd != null ? pwd : System.getenv("REL_KEY")
        }
    }

    buildTypes {

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            zipAlignEnabled true
            signingConfig signingConfigs.release
        }

        debug {
            zipAlignEnabled false
        }

    }
    packagingOptions {
        exclude "META-INF/*.kotlin_module"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    buildFeatures {
        dataBinding = true
    }
    dependenciesInfo {
        includeInApk false
        includeInBundle false
    }
    applicationVariants.all { variants ->
        variants.outputs.all {
            def simpleDataFormat = new SimpleDateFormat("yy-MM-dd-HH-mm")
            simpleDataFormat.setTimeZone(TimeZone.getTimeZone("GMT+8:00"))
            outputFileName = "bilibiliHD_v${defaultConfig.versionName}_${defaultConfig.versionCode}_${buildType.name}_${simpleDataFormat.format(buildTime)}.apk"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
//    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.4.1'

    //glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    kapt 'com.github.bumptech.glide:compiler:4.12.0'

    //browser
    implementation 'androidx.browser:browser:1.3.0'

    //bilibili-api
    implementation project(":bilibili-api")

    //DrawerLayout
    implementation 'androidx.drawerlayout:drawerlayout:1.1.1'

    //CircleImageView
    implementation 'de.hdodenhof:circleimageview:3.1.0'

    implementation 'com.google.android.material:material:1.3.0'
//    implementation 'androidx.navigation:navigation-fragment:2.2.1'
//    implementation 'androidx.navigation:navigation-ui:2.2.1'
//    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //okhttp3
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'

    //gson
    implementation 'com.google.code.gson:gson:2.8.6'

    //exoplayer
    def exoplayerVersion = '2.11.3'
    implementation "com.google.android.exoplayer:exoplayer-core:$exoplayerVersion"
    implementation "com.google.android.exoplayer:exoplayer-ui:$exoplayerVersion"
    implementation "com.google.android.exoplayer:exoplayer-hls:$exoplayerVersion"
//    //mobile-ffmpeg
//    implementation 'com.arthenica:mobile-ffmpeg-min:4.3.1'
    //okdownload
    // core
//    implementation 'com.liulishuo.okdownload:okdownload:1.0.7'
//    // provide sqlite to store breakpoints
//    implementation 'com.liulishuo.okdownload:sqlite:1.0.7'
//    // provide okhttp to connect to backend
//    implementation 'com.liulishuo.okdownload:okhttp:1.0.7'

    //DanmakuView
    implementation 'com.github.duzhaokun123:DanmakuView:0.1.2'

    //lifecycle
    // ViewModel
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0-rc01'
    // LiveData
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.0-rc01'

    //MediaRouter
    implementation 'androidx.mediarouter:mediarouter:1.2.1'

    //grpc
    def grpcVersion = '1.35.0'
    implementation "io.grpc:grpc-okhttp:$grpcVersion"
    implementation "io.grpc:grpc-android:$grpcVersion"
    implementation "io.grpc:grpc-protobuf-lite:$grpcVersion"
    implementation "io.grpc:grpc-stub:$grpcVersion"
    implementation 'org.apache.tomcat:annotations-api:6.0.53'

    //html-textview
    implementation 'org.sufficientlysecure:html-textview:3.9'

    //ktx
    implementation 'androidx.activity:activity-ktx:1.1.0'
    implementation 'androidx.fragment:fragment-ktx:1.2.5'

    //flexbox-layout
    implementation 'com.google.android:flexbox:2.0.1'

    //core
    implementation 'androidx.core:core-ktx:1.5.0-beta01'

    //preferencex
    implementation 'androidx.preference:preference-ktx:1.1.1'
    implementation 'com.takisoft.preferencex:preferencex:1.1.0'
    implementation 'com.takisoft.preferencex:preferencex-simplemenu:1.1.0'

    //dataBinding
    kapt "com.android.databinding:compiler:3.1.4"

    //StfalconImageViewer
    implementation 'com.github.stfalcon:stfalcon-imageviewer:1.0.1'
    implementation 'com.github.chrisbanes:PhotoView:2.2.0'

    //Biometric
    implementation 'androidx.biometric:biometric:1.1.0'

    //SmartRefreshLayout
    def srlVersion = "2.0.3"
    implementation "com.scwang.smart:refresh-layout-kernel:$srlVersion"
    implementation "com.scwang.smart:refresh-header-material:$srlVersion"
    implementation "com.scwang.smart:refresh-footer-classics:$srlVersion"
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.14.0'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.35.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
            task.plugins {
                grpc {
                    option "lite"
                }
            }
        }
    }
}
